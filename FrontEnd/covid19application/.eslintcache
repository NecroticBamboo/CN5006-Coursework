[{"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\index.js":"1","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\reportWebVitals.js":"2","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\App.js":"3","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Main.js":"4","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Header.js":"5","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Home.js":"6","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\AddCovid.js":"7","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\updateRecord.js":"8","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\ShowAllData.js":"9","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getCasesAndDeaths.js":"10","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\deleteRecord.js":"11","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\get20Documents.js":"12","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getDeathsGreater.js":"13","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\BackEndAPI.js":"14","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Banner.js":"15","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\DataTable.js":"16","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Analysis.js":"17","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\BarChart.js":"18","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getCasesGreater.js":"19","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\ComputerInfo.js":"20"},{"size":574,"mtime":1609763063428,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1609763063429,"results":"23","hashOfConfig":"22"},{"size":181,"mtime":1609763063404,"results":"24","hashOfConfig":"22"},{"size":1367,"mtime":1609936563976,"results":"25","hashOfConfig":"22"},{"size":928,"mtime":1609938978057,"results":"26","hashOfConfig":"22"},{"size":307,"mtime":1609969199272,"results":"27","hashOfConfig":"22"},{"size":6351,"mtime":1609970145037,"results":"28","hashOfConfig":"22"},{"size":4339,"mtime":1609970296038,"results":"29","hashOfConfig":"22"},{"size":1544,"mtime":1609763063409,"results":"30","hashOfConfig":"22"},{"size":1892,"mtime":1609970181587,"results":"31","hashOfConfig":"22"},{"size":648,"mtime":1609763063414,"results":"32","hashOfConfig":"22"},{"size":2685,"mtime":1609970201031,"results":"33","hashOfConfig":"22"},{"size":1915,"mtime":1609845566632,"results":"34","hashOfConfig":"22"},{"size":961,"mtime":1609936563957,"results":"35","hashOfConfig":"22"},{"size":174,"mtime":1609936563963,"results":"36","hashOfConfig":"22"},{"size":8038,"mtime":1609941627509,"results":"37","hashOfConfig":"22"},{"size":2332,"mtime":1609936492415,"results":"38","hashOfConfig":"22"},{"size":1911,"mtime":1609936499550,"results":"39","hashOfConfig":"22"},{"size":2567,"mtime":1609945957486,"results":"40","hashOfConfig":"22"},{"size":752,"mtime":1610281375738,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17d99hc",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\index.js",[],["86","87"],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\reportWebVitals.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\App.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Main.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Header.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Home.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\AddCovid.js",["88"],"import React, {useState} from 'react';\r\nimport {addRecord} from '../BackEndAPI';\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\n\r\n\r\n// const datejs = require(\"datejs\");\r\n\r\nconst Covid_Form = () =>{\r\n    const [state, setState] = useState({\r\n        date: new Date().toString(\"yyyy-MM-dd\"),\r\n        county: \"\",\r\n        state: \"New York\",\r\n        cases: null,\r\n        deaths: null,\r\n    })\r\n\r\n    const handleChange = (e) =>{\r\n        const value = e.target.value;\r\n        \r\n        console.log(e.target.name+\": \"+e.target.value);\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        // console.log(state.date);\r\n\r\n        e.preventDefault();\r\n        const CovidData = {\r\n            _id: state.date+\"-\"+state.county+\"-\"+state.state,\r\n            date:state.date,\r\n            county:state.county,\r\n            state:state.state,\r\n            cases: state.cases,\r\n            deaths:state.deaths\r\n        }\r\n        addRecord(CovidData);\r\n    }\r\n\r\n    // Alert\r\n\r\n     const mySubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"You have successfully submitted data for \" + state.county + \" in \"+ state.state +\" !\");\r\n  }\r\n\r\n  \tlet show = !(typeof state.addAt === \"undefined\");\r\n\r\n    return(\r\n        <div onSubmit = {mySubmitHandler} style ={{marginTop:12}} >\r\n            <h3>Add Covid Data</h3>\r\n            <Form onSubmit ={onSubmit} method = \"Post\">\r\n                <Form.Group controlId = \"Date\">\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control type = \"date\"  name =\"date\" value ={state.date}   onChange ={handleChange} required/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = \"County\">\r\n                    <Form.Label>County</Form.Label>\r\n                    <Form.Control type = \"text\"  name =\"county\" value ={state.county} onChange ={handleChange} required/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId =\"State\">\r\n                    <Form.Label>State</Form.Label>\r\n                    {renderStateSelector(state,handleChange)}\r\n                </Form.Group>\r\n                <Form.Group controlId = \"Cases\">\r\n                    <Form.Label>Cases</Form.Label>\r\n                    <Form.Control type = \"number\"  name =\"cases\" value ={state.cases} onChange ={handleChange} required/>\r\n                </Form.Group>\r\n                   \r\n                <Form.Group controlId = \"Deaths\">\r\n                    <Form.Label>Deaths</Form.Label>\r\n                    <Form.Control type = \"number\"  name =\"deaths\" value ={state.deaths} onChange ={handleChange} required/>\r\n                </Form.Group>\r\n                <Button  variant=\"info\" size=\"lg\" block=\"block\" type=\"submit\" style ={{fontFamily:'Comic Sans MS'}}>Add Covid </Button>\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function renderStateSelector(state,handleChange){\r\n    return(\r\n        <Form.Control as = \"select\"  name =\"state\" value ={state.state} onChange ={handleChange}>\r\n            <option value =\"Alabama\">Alabama</option>\r\n            <option value =\"Alaska\">Alaska</option>\r\n            <option value =\"American Samoa\">American Samoa</option>\r\n            <option value =\"Arizona\">Arizona</option>\r\n            <option value =\"Arkansas\">Arkansas</option>\r\n            <option value =\"California\">California</option>\r\n            <option value =\"Colorado\">Colorado</option>\r\n            <option value =\"Connecticut\">Connecticut</option>\r\n            <option value =\"Delaware\">Delaware</option>\r\n            <option value =\"District of Columbia\">District of Columbia</option>\r\n            <option value =\"Florida\">Florida</option>\r\n            <option value =\"Georgia\">Georgia</option>\r\n            <option value =\"Guam\">Guam</option>\r\n            <option value =\"Hawaii\">Hawaii</option>\r\n            <option value =\"Idaho\">Idaho</option>\r\n            <option value =\"Illinois\">Illinois</option>\r\n            <option value =\"Indiana\">Indiana</option>\r\n            <option value =\"Iowa\">Iowa</option>\r\n            <option value =\"Kentucky\">Kentucky</option>\r\n            <option value =\"Louisiana\">Louisiana</option>\r\n            <option value =\"Maine\">Maine</option>\r\n            <option value =\"Maryland\">Maryland</option>\r\n            <option value =\"Massachusetts\">Massachusetts</option>\r\n            <option value =\"Michigan\">Michigan</option>\r\n            <option value =\"Minnesota\">Minnesota</option>\r\n            <option value =\"Mississipi\">Mississipi</option>\r\n            <option value =\"Missouri\">Missouri</option>\r\n            <option value =\"Montana\">Montana</option>\r\n            <option value =\"Nebraska\">Nebraska</option>\r\n            <option value =\"New Hampshire\">New Hampshire</option>\r\n            <option value =\"New Jersey\">New Jersey</option>\r\n            <option value =\"New Mexico\">New Mexico</option>\r\n            <option value =\"New York\">New York</option>\r\n            <option value =\"North Carolina\">North Carolina</option>\r\n            <option value =\"North Dakota\">North Dakota</option>\r\n            <option value =\"Northern Mariana Islands\">Northern Mariana Islands</option>\r\n            <option value =\"Ohio\">Ohio</option>\r\n            <option value =\"Oklahoma\">Oklahoma</option>\r\n            <option value =\"Oregon\">Oregon</option>\r\n            <option value =\"Pennylvania\">Pennylvania</option>\r\n            <option value =\"Puerto Rico\">Puerto Rico</option>\r\n            <option value =\"Rhode Island\">Rhode Island</option>\r\n            <option value =\"South Carolina\">South Carolina</option>\r\n            <option value =\"South Dakota\">South Dakota</option>\r\n            <option value =\"Tennessee\">Tennessee</option>\r\n            <option value =\"Texas\">Texas</option>\r\n            <option value =\"Utah\">Utah</option>\r\n            <option value =\"Vermont\">Vermont</option>\r\n            <option value =\"Virginia\">Virginia</option>\r\n            <option value =\"Virgin Islands\">Virgin Islands</option>\r\n            <option value =\"Washington\">Washington</option>\r\n            <option value =\"West\">West Virginia</option>\r\n            <option value =\"Wisconsin\">Wisconsin</option>\r\n            <option value =\"Wyoming\">Wyoming</option>\r\n        </Form.Control>\r\n    );\r\n}\r\n\r\nexport default Covid_Form;","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\updateRecord.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\ShowAllData.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getCasesAndDeaths.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\deleteRecord.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\get20Documents.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getDeathsGreater.js",[],["89","90"],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\BackEndAPI.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Banner.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\DataTable.js",["91"],"// src/components/pagination.table.js\r\nimport React from \"react\";\r\n\r\nimport { useTable, usePagination, useFilters, useGlobalFilter, useAsyncDebounce  } from 'react-table'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// see https://www.freakyjolly.com/react-table-tutorial/#.X-9rBNj7SHs \r\n\r\n\r\n// const url = '/updateRecord/'+data._id;\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    const count = preGlobalFilteredRows.length\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n\r\n    const editButton = {\r\n        backgroundColor :\"black\"\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            Search:{' '}\r\n            <input\r\n                className=\"form-control\"\r\n                value={value || \"\"}\r\n                onChange={e => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n                placeholder={`${count} records...`}\r\n            />\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"form-control\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Table({ columns, data, deleteRow }) {\r\n\t\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n\t\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n\t\tpreGlobalFilteredRows,\r\n        setGlobalFilter,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n\t\t\tdefaultColumn,\r\n            initialState: { pageIndex: 0, pageSize: 20 },\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination\r\n    )\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <div>\r\n            <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n            />\r\n            <table className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>\r\n\t\t\t\t\t\t\t\t\t{column.render('Header')}\r\n\t\t\t\t\t\t\t\t\t{/* Render the columns filter UI */}\r\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n\t\t\t\t\t\t\t\t</th>\r\n                            ))}\r\n                            <th>\r\n                                Actions\r\n                            </th>    \r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                                {/* {console.log(deleteRow)} */}\r\n                                <td>\r\n                                    <div class=\"container-fluid\">\r\n                                        <div class=\"row\">    \r\n                                            <Link to={'/updateRecord/'+row.original._id}  className=\"edit-link-button col-sm-6\" >\r\n                                                Edit\r\n                                            </Link>\r\n                                            \r\n                                            <Link onClick={() => { if ( window.confirm('Are you sure you wish to delete this data?'))  deleteRow(row.original._id) }} className=\"delete-link-button col-sm-6\" >\r\n                                                Delete\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            \r\n            <ul className=\"pagination\">\r\n                <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    <div className=\"page-link\">First</div>\r\n                </li>\r\n                <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <div className=\"page-link\">{'<'}</div>\r\n                </li>\r\n                <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <div className=\"page-link\">{'>'}</div>\r\n                </li>\r\n                <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    <div className=\"page-link\">Last</div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"page-link\">\r\n                        Page{' '}\r\n                        <strong>\r\n                            {pageIndex + 1} of {pageOptions.length}\r\n                        </strong>{' '}\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"page-link\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            defaultValue={pageIndex + 1}\r\n                            onChange={e => {\r\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                gotoPage(page)\r\n                            }}\r\n                            style={{ width: '100px', height: '20px' }}\r\n                        />\r\n                    </div>\r\n                </li>{' '}\r\n                <select\r\n                    className=\"form-control\"\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                    style={{ width: '120px', height: '38px' }}\r\n                >\r\n                    {[5, 10, 20, 30, 40, 50].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction DataTable({data,deleteRow}) {\r\n    const columns = React.useMemo(\r\n        () => [\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Date',\r\n\t\t\t\taccessor: 'date',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'State',\r\n\t\t\t\taccessor: 'state',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'County',\r\n\t\t\t\taccessor: 'county',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cases',\r\n\t\t\t\taccessor: 'cases',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Deaths',\r\n\t\t\t\taccessor: 'deaths',\r\n\t\t\t},\r\n        ],\r\n        []\r\n    );\r\n\treturn (\r\n        <Table columns={columns} data={data} deleteRow={deleteRow} />\r\n    )\r\n}\r\n\r\nexport default DataTable;","C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Analysis.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\BarChart.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getCasesGreater.js",[],"C:\\Users\\Filho\\CN5006_GroupCoursework\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\ComputerInfo.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":50,"column":8,"nodeType":"98","messageId":"99","endLine":50,"endColumn":12},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"96","severity":1,"message":"102","line":26,"column":11,"nodeType":"98","messageId":"99","endLine":26,"endColumn":21},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar",["103"],["104"],"'editButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]