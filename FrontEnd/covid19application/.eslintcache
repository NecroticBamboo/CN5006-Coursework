[{"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\index.js":"1","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\reportWebVitals.js":"2","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\App.js":"3","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Header.js":"4","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Main.js":"5","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\AddCovid.js":"6","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\deleteRecord.js":"7","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\get20Documents.js":"8","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\updateRecord.js":"9","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getCasesAndDeaths.js":"10","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Home.js":"11","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getDeathsGreater.js":"12","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getComputerInfo.js":"13","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\ShowAllData.js":"14","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Analysis.js":"15","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\DataTable.js":"16","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\BarChart.js":"17"},{"size":574,"mtime":1608498769850,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1608498769851,"results":"20","hashOfConfig":"19"},{"size":181,"mtime":1608498769847,"results":"21","hashOfConfig":"19"},{"size":1014,"mtime":1609539336980,"results":"22","hashOfConfig":"19"},{"size":1379,"mtime":1609538495503,"results":"23","hashOfConfig":"19"},{"size":6964,"mtime":1609528020701,"results":"24","hashOfConfig":"19"},{"size":648,"mtime":1609517104519,"results":"25","hashOfConfig":"19"},{"size":190,"mtime":1608569901047,"results":"26","hashOfConfig":"19"},{"size":7240,"mtime":1609537166760,"results":"27","hashOfConfig":"19"},{"size":300,"mtime":1609539466654,"results":"28","hashOfConfig":"19"},{"size":307,"mtime":1609181048756,"results":"29","hashOfConfig":"19"},{"size":1338,"mtime":1609518068382,"results":"30","hashOfConfig":"19"},{"size":202,"mtime":1608569901050,"results":"31","hashOfConfig":"19"},{"size":2199,"mtime":1609362025599,"results":"32","hashOfConfig":"19"},{"size":2891,"mtime":1609328393040,"results":"33","hashOfConfig":"19"},{"size":2007,"mtime":1609539441553,"results":"34","hashOfConfig":"19"},{"size":1949,"mtime":1609329917881,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"12yslsm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\index.js",[],["75","76"],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\reportWebVitals.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\App.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Header.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Main.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\AddCovid.js",["77"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst datejs = require(\"datejs\");\r\n\r\nconst Covid_Form = () =>{\r\n    const [state, setState] = useState({\r\n    date: new Date().toString(\"yyyy-MM-dd\"),\r\n    county: \"\",\r\n    state: \"\",\r\n    cases: null,\r\n    deaths: null,\r\n    })\r\n\r\n    let url =\"http://localhost:5000/\"\r\n    const handleChange = (e) =>{\r\n        const value = e.target.value;\r\n        \r\n        console.log(e.target.name+\": \"+e.target.value);\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        // alert(\"Total deaths so far: \" + state.deaths)\r\n        console.log(state.date);\r\n\r\n        e.preventDefault();\r\n        const CovidData = {\r\n            _id: state.date+\"-\"+state.county+\"-\"+state.state,\r\n            date:state.date,\r\n            county:state.county,\r\n            state:state.state,\r\n            cases: state.cases,\r\n            deaths:state.deaths\r\n        }\r\n\r\n        // alert.log(\"New Record added: \"); //display record in alert\r\n        axios.post(url + \"addNewRecord\", CovidData);\r\n    }\r\n\r\n    return(\r\n        <div style ={{marginTop:12}} >\r\n            <h3>Add Covid Data</h3>\r\n            <Form onSubmit ={onSubmit} method = \"Post\">\r\n                <Form.Group controlId = \"Date\">\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control type = \"date\"  name =\"date\" value ={state.date} onChange ={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = \"County\">\r\n                    <Form.Label>County</Form.Label>\r\n                    <Form.Control type = \"text\"  name =\"county\" value ={state.county} onChange ={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId =\"State\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control as = \"select\"  name =\"state\" value ={state.state} onChange ={handleChange}>\r\n                            <option value =\"Alabama\">Alabama</option>\r\n                            <option value =\"Alaska\">Alaska</option>\r\n                            <option value =\"American Samoa\">American Samoa</option>\r\n                            <option value =\"Arizona\">Arizona</option>\r\n                            <option value =\"Arkansas\">Arkansas</option>\r\n                            <option value =\"California\">California</option>\r\n                            <option value =\"Colorado\">Colorado</option>\r\n                            <option value =\"Connecticut\">Connecticut</option>\r\n                            <option value =\"Delaware\">Delaware</option>\r\n                            <option value =\"District of Columbia\">District of Columbia</option>\r\n                            <option value =\"Florida\">Florida</option>\r\n                            <option value =\"Georgia\">Georgia</option>\r\n                            <option value =\"Guam\">Guam</option>\r\n                            <option value =\"Hawaii\">Hawaii</option>\r\n                            <option value =\"Idaho\">Idaho</option>\r\n                            <option value =\"Illinois\">Illinois</option>\r\n                            <option value =\"Indiana\">Indiana</option>\r\n                            <option value =\"Iowa\">Iowa</option>\r\n                            <option value =\"Kentucky\">Kentucky</option>\r\n                            <option value =\"Louisiana\">Louisiana</option>\r\n                            <option value =\"Maine\">Maine</option>\r\n                            <option value =\"Maryland\">Maryland</option>\r\n                            <option value =\"Massachusetts\">Massachusetts</option>\r\n                            <option value =\"Michigan\">Michigan</option>\r\n                            <option value =\"Minnesota\">Minnesota</option>\r\n                            <option value =\"Mississipi\">Mississipi</option>\r\n                            <option value =\"Missouri\">Missouri</option>\r\n                            <option value =\"Montana\">Montana</option>\r\n                            <option value =\"Nebraska\">Nebraska</option>\r\n                            <option value =\"New Hampshire\">New Hampshire</option>\r\n                            <option value =\"New Jersey\">New Jersey</option>\r\n                            <option value =\"New Mexico\">New Mexico</option>\r\n                            <option value =\"New York\">New York</option>\r\n                            <option value =\"North Carolina\">North Carolina</option>\r\n                            <option value =\"North Dakota\">North Dakota</option>\r\n                            <option value =\"Northern Mariana Islands\">Northern Mariana Islands</option>\r\n                            <option value =\"Ohio\">Ohio</option>\r\n                            <option value =\"Oklahoma\">Oklahoma</option>\r\n                            <option value =\"Oregon\">Oregon</option>\r\n                            <option value =\"Pennylvania\">Pennylvania</option>\r\n                            <option value =\"Puerto Rico\">Puerto Rico</option>\r\n                            <option value =\"Rhode Island\">Rhode Island</option>\r\n                            <option value =\"South Carolina\">South Carolina</option>\r\n                            <option value =\"South Dakota\">South Dakota</option>\r\n                            <option value =\"Tennessee\">Tennessee</option>\r\n                            <option value =\"Texas\">Texas</option>\r\n                            <option value =\"Utah\">Utah</option>\r\n                            <option value =\"Vermont\">Vermont</option>\r\n                            <option value =\"Virginia\">Virginia</option>\r\n                            <option value =\"Virgin Islands\">Virgin Islands</option>\r\n                            <option value =\"Washington\">Washington</option>\r\n                            <option value =\"West\">West Virginia</option>\r\n                            <option value =\"Wisconsin\">Wisconsin</option>\r\n                            <option value =\"Wyoming\">Wyoming</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = \"Cases\">\r\n                    <Form.Label>Cases</Form.Label>\r\n                    <Form.Control type = \"number\"  name =\"cases\" value ={state.cases} onChange ={handleChange}/>\r\n                </Form.Group>\r\n                   \r\n                <Form.Group controlId = \"Deaths\">\r\n                    <Form.Label>Deaths</Form.Label>\r\n                    <Form.Control type = \"number\"  name =\"deaths\" value ={state.deaths} onChange ={handleChange}/>\r\n                </Form.Group>\r\n                <Button variant=\"info\" size=\"lg\" block=\"block\" type=\"submit\">Add Covid </Button>\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Covid_Form;","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\deleteRecord.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\get20Documents.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\updateRecord.js",["78","79"],"import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Covid_UpdateRecord (props) {\r\n       const [state, setState] = useState({\r\n    date: new Date().toString(\"yyyy-MM-dd\"),\r\n    county: \"\",\r\n    state: \"\",\r\n    cases: null,\r\n    deaths: null,\r\n    })\r\n\r\n      const [StatedLoaded, Set_StatedLoaded]=useState(false)\r\n  let url= \"http://localhost:5000/\"\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\nuseEffect(() => {\r\n    axios.get('http://localhost:5000/getrecord/'+ props.match.params.id)\r\n                .then(res => {\r\n                    setState(res.data)\r\n                }).catch( err => {\r\n                    console.log(\"error has occurred\")\r\n                })\r\n}, [])\r\nuseEffect(() => {\r\n    if (state.length>0)\r\n    Set_StatedLoaded(true)\r\n }, [state]);\r\n\r\nconst onSubmit=(e) =>\r\n   { \r\n        e.preventDefault();\r\n        const CovidData = {\r\n            _id: state.date+\"-\"+state.county+\"-\"+state.state,\r\n            date:state.date,\r\n            county:state.county,\r\n            state:state.state,\r\n            cases: state.cases,\r\n            deaths:state.deaths\r\n        }\r\n         axios.post(url+\"upadateCovid/\"+props.match.params.id, CovidData)\r\n    .then(res => console.log(res.data));\r\n   }\r\n     return(\r\n        <div style ={{marginTop:12}} >\r\n            <h3>Add Covid Data</h3>\r\n            <Form onSubmit ={onSubmit} method = \"Post\">\r\n                <Form.Group controlId = \"Date\">\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control type = \"date\"  name =\"date\" value ={state.date} onChange ={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = \"County\">\r\n                    <Form.Label>County</Form.Label>\r\n                    <Form.Control type = \"text\"  name =\"county\" value ={state.county} onChange ={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId =\"State\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control as = \"select\"  name =\"state\" value ={state.state} onChange ={handleChange}>\r\n                            <option value =\"Alabama\">Alabama</option>\r\n                            <option value =\"Alaska\">Alaska</option>\r\n                            <option value =\"American Samoa\">American Samoa</option>\r\n                            <option value =\"Arizona\">Arizona</option>\r\n                            <option value =\"Arkansas\">Arkansas</option>\r\n                            <option value =\"California\">California</option>\r\n                            <option value =\"Colorado\">Colorado</option>\r\n                            <option value =\"Connecticut\">Connecticut</option>\r\n                            <option value =\"Delaware\">Delaware</option>\r\n                            <option value =\"District of Columbia\">District of Columbia</option>\r\n                            <option value =\"Florida\">Florida</option>\r\n                            <option value =\"Georgia\">Georgia</option>\r\n                            <option value =\"Guam\">Guam</option>\r\n                            <option value =\"Hawaii\">Hawaii</option>\r\n                            <option value =\"Idaho\">Idaho</option>\r\n                            <option value =\"Illinois\">Illinois</option>\r\n                            <option value =\"Indiana\">Indiana</option>\r\n                            <option value =\"Iowa\">Iowa</option>\r\n                            <option value =\"Kentucky\">Kentucky</option>\r\n                            <option value =\"Louisiana\">Louisiana</option>\r\n                            <option value =\"Maine\">Maine</option>\r\n                            <option value =\"Maryland\">Maryland</option>\r\n                            <option value =\"Massachusetts\">Massachusetts</option>\r\n                            <option value =\"Michigan\">Michigan</option>\r\n                            <option value =\"Minnesota\">Minnesota</option>\r\n                            <option value =\"Mississipi\">Mississipi</option>\r\n                            <option value =\"Missouri\">Missouri</option>\r\n                            <option value =\"Montana\">Montana</option>\r\n                            <option value =\"Nebraska\">Nebraska</option>\r\n                            <option value =\"New Hampshire\">New Hampshire</option>\r\n                            <option value =\"New Jersey\">New Jersey</option>\r\n                            <option value =\"New Mexico\">New Mexico</option>\r\n                            <option value =\"New York\">New York</option>\r\n                            <option value =\"North Carolina\">North Carolina</option>\r\n                            <option value =\"North Dakota\">North Dakota</option>\r\n                            <option value =\"Northern Mariana Islands\">Northern Mariana Islands</option>\r\n                            <option value =\"Ohio\">Ohio</option>\r\n                            <option value =\"Oklahoma\">Oklahoma</option>\r\n                            <option value =\"Oregon\">Oregon</option>\r\n                            <option value =\"Pennylvania\">Pennylvania</option>\r\n                            <option value =\"Puerto Rico\">Puerto Rico</option>\r\n                            <option value =\"Rhode Island\">Rhode Island</option>\r\n                            <option value =\"South Carolina\">South Carolina</option>\r\n                            <option value =\"South Dakota\">South Dakota</option>\r\n                            <option value =\"Tennessee\">Tennessee</option>\r\n                            <option value =\"Texas\">Texas</option>\r\n                            <option value =\"Utah\">Utah</option>\r\n                            <option value =\"Vermont\">Vermont</option>\r\n                            <option value =\"Virginia\">Virginia</option>\r\n                            <option value =\"Virgin Islands\">Virgin Islands</option>\r\n                            <option value =\"Washington\">Washington</option>\r\n                            <option value =\"West\">West Virginia</option>\r\n                            <option value =\"Wisconsin\">Wisconsin</option>\r\n                            <option value =\"Wyoming\">Wyoming</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = \"Cases\">\r\n                    <Form.Label>Cases</Form.Label>\r\n                    <Form.Control type = \"number\"  name =\"cases\" value ={state.cases} onChange ={handleChange}/>\r\n                </Form.Group>\r\n                   \r\n                <Form.Group controlId = \"Deaths\">\r\n                    <Form.Label>Deaths</Form.Label>\r\n                    <Form.Control type = \"number\"  name =\"deaths\" value ={state.deaths} onChange ={handleChange}/>\r\n                </Form.Group>\r\n                <Button variant=\"info\" size=\"lg\" block=\"block\" type=\"submit\">Update Covid Data </Button>\r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Covid_UpdateRecord\r\n\r\n\r\n\r\n// export default updateRecord;","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getCasesAndDeaths.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Home.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getDeathsGreater.js",["80","81","82","83","84","85"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport DataTable from './DataTable';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Analysis from './Analysis';\r\n\r\n\r\nlet url =\"http://localhost:5000/\";\r\n\r\n\r\nconst getDeathsGreater = () =>{\r\n    return(\r\n    <div>\r\n        <h1>This is the get deaths greater than a given number page</h1>\r\n\r\n    </div>\r\n    \r\n    );\r\n    \r\n}\r\n\r\n// const getDeathsGreater = (props) =>{\r\n\r\n//     const getDeaths = props.match.params.deaths;\r\n\r\n//     var deaths = 150;\r\n//     axios.post(url +\"Get deaths greater than \"+ getDeaths)\r\n//             .then( res => {\r\n//                  return(\r\n//                     <div>\r\n//                         <h1>This is the get deaths greater than a given number page</h1>\r\n//                         <p>Counties where number of deaths is greater than { deaths} { this.state.getDeaths.map(x => x.deaths).reduce((a, b) =>  a + b, 0) }</p>\r\n//                         <Analysis/>\r\n//                         |<DataTable/>\r\n//                         <Redirect to =\"getDeathsGreater\"/>\r\n//                     </div>\r\n    \r\n//     );\r\n//  }).catch (err => {\r\n//      return (\r\n//          <div>\r\n//              <p> There is an error of type {err}</p>\r\n//          </div>\r\n//      )\r\n//  })\r\n \r\n    \r\n// }\r\n\r\nexport default getDeathsGreater;","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\getComputerInfo.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\ShowAllData.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\Analysis.js",["86"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport DataTable from './DataTable';\r\nimport BarChart from './BarChart';\r\n\r\nlet url =\"http://localhost:5000/\";\r\n\r\nexport default class Analysis extends React.Component{\r\n                             \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n\t\t\tDeathsByState: [],\r\n\t\t\tDeathsByCounty: [],\r\n\t\t\tCasesByState: [],\r\n\t\t\tCasesByCounty: [],\r\n\t\t\tCovid19Data: []\r\n\t\t};\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get(url+\"getAllRecords\")\r\n        .then(res => {\r\n            console.log(\"Get all records triggered\");\r\n\t\t\t\r\n            this.setState({\r\n\t\t\t\tDeathsByState:  this.prepareChart( res.data, x => x.state,  x => x.deaths ),\r\n\t\t\t\tDeathsByCounty: this.prepareChart( res.data, x => x.county, x => x.deaths ),\r\n\t\t\t\tCasesByState:   this.prepareChart( res.data, x => x.state,  x => x.cases ),\r\n\t\t\t\tCasesByCounty:  this.prepareChart( res.data, x => x.county, x => x.cases ),\r\n\t\t\t\tCovid19Data: res.data\r\n\t\t\t});\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\tprepareChart( data, keySelector, valueSelector ) {\r\n\r\n\t\t// select distinct states and sort them alphabelicaly\r\n\t\tvar states = [...new Set(data.map( (row, i ) => keySelector(row) ))];\r\n\t\tstates.sort();\r\n\t\t\r\n\t\t// initializes deaths array\r\n\t\tvar deaths = new Array(states.length);\r\n\t\tfor ( var i = 0; i < states.length; i++ ) {\r\n\t\t\tdeaths[i] = { \r\n\t\t\t\tlabel : states[i],\r\n\t\t\t\tvalue : 0\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t// create statename -> position within array index for faster access\r\n\t\tvar stateIndex = {};\r\n\t\tfor ( i = 0; i < states.length; i++ ) {\r\n\t\t\tstateIndex[states[i]] = i;\r\n\t\t}\r\n\t\t\t\r\n\t\tdata.forEach( row => {\r\n\t\t\tdeaths[ stateIndex[keySelector(row)] ].value += valueSelector(row);\r\n\t\t} );\r\n\t\t\t\r\n\t\t// compare in reverse order\r\n\t\tfunction compare( a, b ) {\r\n\t\t\tif ( a.value < b.value ){\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ( a.value > b.value ){\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\t// sort descending\r\n\t\tdeaths.sort( compare );\r\n\t\t\t\r\n\t\treturn deaths;\r\n\t}\r\n\t\r\n\tprepareCasesChart( data ) {\r\n\t\treturn this.prepareChart( data, x => x.state, x => x.cases );\r\n\t}\r\n\t\r\n    render() {\r\n\t\t\r\n\t\tconsole.log(this.state.ChartData);\r\n\t\t\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t<p>Total deaths: { this.state.Covid19Data.map(x => x.deaths).reduce((a, b) => a + b, 0) }</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<BarChart data={this.state.DeathsByState} title=\"Deaths\" color=\"#70CAD1\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<BarChart data={this.state.DeathsByCounty} title=\"Deaths\" color=\"#70CAD1\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>Total cases: { this.state.Covid19Data.map(x => x.cases).reduce((a, b) => a + b, 0) }</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<BarChart data={this.state.CasesByState} title=\"Cases\" color=\"#70CAD1\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<BarChart data={this.state.CasesByCounty} title=\"Cases\" color=\"#70CAD1\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\DataTable.js",[],"C:\\Users\\Filho\\CN5006-Coursework\\FrontEnd\\covid19application\\src\\Components\\BarChart.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":8,"column":7,"nodeType":"93","messageId":"94","endLine":8,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":17,"column":14,"nodeType":"93","messageId":"94","endLine":17,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":34,"column":4,"nodeType":"98","endLine":34,"endColumn":6,"suggestions":"99"},{"ruleId":"91","severity":1,"message":"100","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"101","line":2,"column":17,"nodeType":"93","messageId":"94","endLine":2,"endColumn":26},{"ruleId":"91","severity":1,"message":"102","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":17},{"ruleId":"91","severity":1,"message":"103","line":4,"column":9,"nodeType":"93","messageId":"94","endLine":4,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":16},{"ruleId":"91","severity":1,"message":"105","line":8,"column":5,"nodeType":"93","messageId":"94","endLine":8,"endColumn":8},{"ruleId":"91","severity":1,"message":"102","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":17},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'datejs' is assigned a value but never used.","Identifier","unusedVar","'StatedLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'axios' is defined but never used.","'Component' is defined but never used.","'DataTable' is defined but never used.","'Redirect' is defined but never used.","'Analysis' is defined but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [props.match.params.id]",{"range":"111","text":"112"},[954,956],"[props.match.params.id]"]